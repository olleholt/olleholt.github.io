{
  "hash": "1ba3e36225d53c7879099baf1125ffd4",
  "result": {
    "markdown": "---\ntitle: 'Houston Blackout Spatial Analysis'\nauthor: \"Olivia Holt\"\ndate: \"2022-14-12\"\noutput:\n    html_document:\n      print_df: paged\n      toc: yes\n      toc_depth: 4\n      toc_float: yes\n      code-fold: TRUE\n---\n\n\n## Problem Statement\n\nWhat impact did the Texas power outage have on different socioeconomic communities?\n\n## Goals\n\n\"In February 2021, the state of Texas suffered a major power crisis, which came about as a result of three severe winter storms sweeping across the United States on February 10--11, 13--17, and 15--20.\"\n\nTasks for this analysis\n\n-   estimating the number of homes in Houston that lost power as a result of the first two storms\n\n-   investigating if socioeconomic factors are predictors of communities recovery from a power outage\n\n**Highlights of Analysis:**\n\n-   loading vector/raster data\n\n-   simple raster operations\n\n-   simple vector operations\n\n-   spatial joins\n\n### Data\n\n**Night lights data**\n\nSpatial data is remotely-sensed night lights data, acquired from the Visible Infrared Imaging Radiometer Suite (VIIRS) onboard the Suomi satellite. Specifically, VNP46A1 to detect differences in night lights before and after the storm to identify areas that lost electric power.\n\n**Roads**\n\nTo minimize falsely identifying areas with reduced traffic as areas without power, areas near highways will be ignored. Geofabrik's download sites will be used to retrieve a shapefile of all highways in Texas and prepared a Geopackage (.gpkg file) containing just the subset of roads that intersect the Houston metropolitan area. \n\n**Houses**\n\nWe can also obtain building data from OpenStreetMap from Geofabrick and prepared a GeoPackage containing only houses in the Houston metropolitan area.\n\n**Socioeconomic**\n\nWe cannot readily get socioeconomic information for every home, so instead we obtained data from the U.S. Census Bureau's American Community Survey for census tracts in 2019.\n\n**read in and combine the data**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(sf)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLinking to GEOS 3.11.2, GDAL 3.6.2, PROJ 9.2.0; sf_use_s2() is TRUE\n```\n:::\n\n```{.r .cell-code}\nlibrary(stars)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: abind\n```\n:::\n\n```{.r .cell-code}\nlibrary(terra)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nterra 1.7.46\n```\n:::\n\n```{.r .cell-code}\nlibrary(spData)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nThe legacy packages maptools, rgdal, and rgeos, underpinning the sp package,\nwhich was just loaded, will retire in October 2023.\nPlease refer to R-spatial evolution reports for details, especially\nhttps://r-spatial.org/r/2023/05/15/evolution4.html.\nIt may be desirable to make the sf package available;\npackage maintainers should consider adding sf to Suggests:.\nThe sp package is now running under evolution status 2\n     (status 2 uses the sf package in place of rgdal)\n```\n:::\n\n```{.r .cell-code}\nlibrary(geodata)\nlibrary(spDataLarge)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.2     ✔ readr     2.1.4\n✔ forcats   1.0.0     ✔ stringr   1.5.0\n✔ ggplot2   3.4.3     ✔ tibble    3.2.1\n✔ lubridate 1.9.2     ✔ tidyr     1.3.0\n✔ purrr     1.0.2     \n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ tidyr::extract() masks terra::extract()\n✖ dplyr::filter()  masks stats::filter()\n✖ dplyr::lag()     masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n:::\n\n```{.r .cell-code}\n#reading in the data with read_stars for the night lights data\nnight_1 <- read_stars(\"data/VNP46A1.A2021038.h08v05.001.2021039064328.tif\", package = \"stars\")\n\nnight_2 <- read_stars(\"data/VNP46A1.A2021038.h08v06.001.2021039064329.tif\", package = \"stars\")\n\nnight_3 <- read_stars(\"data/VNP46A1.A2021047.h08v05.001.2021048091106.tif\", package = \"stars\")\n\nnight_4 <- read_stars(\"data/VNP46A1.A2021047.h08v06.001.2021048091105.tif\", package = \"stars\")\n\n#combining into one for each date: 02-07\nstars_1 <- st_mosaic(night_1, night_2)\n\n#combining into one for each date: 02-16\nstars_2 <- st_mosaic(night_3, night_4)\n```\n:::\n\n\nFirst a blackout mask was created by finding the change intensity from the night light data. All locations that experienced a drop of more than 200 cm-2sr-1 were assumed to have experienced a blackout.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#find the change in night lights intensity\nchange_in_intensity <- stars_1 - stars_2\n\n#viewing in a plot\nplot(change_in_intensity)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\ndownsample set to 1\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#reclassify the difference raster, with cut() and breaks\nintensity_reclass <- cut(change_in_intensity, breaks = c(200, Inf), labels = \"exp. blackout\")\n```\n:::\n\n\nThe data was then vectorized.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#using st_as_sf() to vectorize, check geometries are valid\ninten_vec <- st_as_sf(intensity_reclass) %>%\n  st_make_valid(inten_vec)\n```\n:::\n\n\nWith the defined region of Houston, the vectorized map from above was cropped to the area of interest.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#make a data.frame x = c(coord), y = c(coords))\nbounds <- data.frame(x = c(-96.5, -96.5, -94.5, -94.5), y = c(29, 30.5, 30.5, 29))\n\n#st_as_sf make coords\nhouston <- bounds %>% \n  st_as_sf(coords = c(\"x\", \"y\")) %>% \n  st_set_crs(\"EPSG:4326\") %>%\n  st_combine() %>% \n  st_cast(\"POLYGON\") #turn into a polygon\n\n#bounding the lights data with houston coordinates\nhouston_lights <- inten_vec[houston, ]\n\n#reprojecting using st_transform\nhouston_lights_transform <- st_transform(houston_lights, crs = \"EPSG:3083\")\nhouston_lights_transform\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nSimple feature collection with 7256 features and 1 field\nGeometry type: POLYGON\nDimension:     XY\nBounding box:  xmin: 1838039 ymin: 7216392 xmax: 2006680 ymax: 7385430\nProjected CRS: NAD83 / Texas Centric Albers Equal Area\nFirst 10 features:\n     VNP46A1.A2021038.h08v05.001.2021039064328.tif\n7779                                 exp. blackout\n7780                                 exp. blackout\n7782                                 exp. blackout\n7885                                 exp. blackout\n7886                                 exp. blackout\n7907                                 exp. blackout\n7908                                 exp. blackout\n7926                                 exp. blackout\n7943                                 exp. blackout\n7944                                 exp. blackout\n                           geometry\n7779 POLYGON ((1913468 7383120, ...\n7780 POLYGON ((1913867 7383136, ...\n7782 POLYGON ((1978921 7384950, ...\n7885 POLYGON ((1977492 7381179, ...\n7886 POLYGON ((1977891 7381197, ...\n7907 POLYGON ((1977513 7380717, ...\n7908 POLYGON ((1977912 7380735, ...\n7926 POLYGON ((1975539 7380164, ...\n7943 POLYGON ((1975559 7379702, ...\n7944 POLYGON ((1975958 7379720, ...\n```\n:::\n:::\n\n\nThe roads geopackage includes data on roads other than highways. However, we can avoid reading in data we don't need by taking advantage of st_read's ability to subset using a **SQL query.**\n\nAreas within 200m of all highways using **st_buffer** were identified. Then the areas that experienced blackouts that are further than 200m from a highway were found using **st_difference().**\n\nquery \\<- \"SELECT \\* FROM gis_osm_roads_free_1 WHERE fclass='motorway'\"highways \\<- st_read(\"data/gis_osm_roads_free_1.gpkg\", query = query)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#loading query\nquery1 <- \"SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway'\"\n\n#loading data\nhighways <- st_read(\"data/gis_osm_roads_free_1.gpkg\", query = query1) %>% \n  st_transform(3083)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading query `SELECT * FROM gis_osm_roads_free_1 WHERE fclass='motorway''\nfrom data source `C:\\Users\\olivi\\Documents\\MEDS\\olleholt.github.io\\blog\\eds223_final_blog\\data\\gis_osm_roads_free_1.gpkg' \n  using driver `GPKG'\nSimple feature collection with 6085 features and 10 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: -96.50429 ymin: 29.00174 xmax: -94.39619 ymax: 30.50886\nGeodetic CRS:  WGS 84\n```\n:::\n\n```{.r .cell-code}\n#using a buffer to find areas within 200m\nhwys_200 <- highways %>% \n  st_buffer(dist = 200) %>% \n  st_union()\n\n#using st_difference to \nhwys_further <- st_difference(houston_lights_transform , hwys_200)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: attribute variables are assumed to be spatially constant throughout\nall geometries\n```\n:::\n:::\n\n\nTo find homes impacted by blackouts **st_read** and the following SQL query to select only residential buildings were used.\n\nSELECT \\*  FROM gis_osm_buildings_a_free_1WHERE (type IS NULL AND name IS NULL)OR type in ('residential', 'apartments', 'house', 'static_caravan', 'detached')\n\n#\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\\_\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#this query selects for residential already\nquery2 <- \"SELECT * FROM gis_osm_buildings_a_free_1 WHERE (type IS NULL AND name IS NULL)OR type in ('residential', 'apartments', 'house', 'static_caravan', 'detached')\"\n#reading in the buildings data and transforming the geometries\nbuildings <- st_read(\"data/gis_osm_buildings_a_free_1.gpkg\", query = query2) %>% \n  st_transform(3083)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading query `SELECT * FROM gis_osm_buildings_a_free_1 WHERE (type IS NULL AND name IS NULL)OR type in ('residential', 'apartments', 'house', 'static_caravan', 'detached')'\nfrom data source `C:\\Users\\olivi\\Documents\\MEDS\\olleholt.github.io\\blog\\eds223_final_blog\\data\\gis_osm_buildings_a_free_1.gpkg' \n  using driver `GPKG'\nSimple feature collection with 475941 features and 5 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -96.50055 ymin: 29.00344 xmax: -94.53285 ymax: 30.50393\nGeodetic CRS:  WGS 84\n```\n:::\n:::\n\n\nfilter to homes within blackout areas using **st_filter().**\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#using filter to find homes within blackout areas\nhomes_blackout<- st_filter(buildings, hwys_further)\n\n#printing the number of rows (number of homes within a blackout area)\nprint(nrow(homes_blackout))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 157411\n```\n:::\n:::\n\n\nUsing **st_read()** to load the geodatabase layers.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#using st_read() to load in gdb layers\n#reprojecting to EPSG:3080\nacs_geom <- st_read(\"data/ACS_2019_5YR_TRACT_48_TEXAS.gdb\", layer = \"ACS_2019_5YR_TRACT_48_TEXAS\") %>% st_transform(3083) #transforming geometries\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `ACS_2019_5YR_TRACT_48_TEXAS' from data source \n  `C:\\Users\\olivi\\Documents\\MEDS\\olleholt.github.io\\blog\\eds223_final_blog\\data\\ACS_2019_5YR_TRACT_48_TEXAS.gdb' \n  using driver `OpenFileGDB'\nSimple feature collection with 5265 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: -106.6456 ymin: 25.83716 xmax: -93.50804 ymax: 36.5007\nGeodetic CRS:  NAD83\n```\n:::\n\n```{.r .cell-code}\n#reading in the income layer from the gdb\nacs_income <- st_read(\"data/ACS_2019_5YR_TRACT_48_TEXAS.gdb\", layer = \"X19_INCOME\") %>% select(\"B19013e1\",\"GEOID\") #selecting the median income field B19013e1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nReading layer `X19_INCOME' from data source \n  `C:\\Users\\olivi\\Documents\\MEDS\\olleholt.github.io\\blog\\eds223_final_blog\\data\\ACS_2019_5YR_TRACT_48_TEXAS.gdb' \n  using driver `OpenFileGDB'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: no simple feature geometries present: returning a data.frame or tbl_df\n```\n:::\n:::\n\n\nThe income data and the census tract geometries were joined using a **left_join()** and **st_join.** Then the number of impacted tracts were found using the **unique()** function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#renaming the column in income data to match the correct column in the geometries data\nincome_new <- acs_income %>% rename(\"GEOID_Data\" = \"GEOID\")\n\n#left_join/full_join and match column names\n#joining income data to census track geom\nacs_join <- left_join(acs_geom, income_new,by = join_by(GEOID_Data))\n\n#transforming the houston polygon\nhouston_3083 <- st_transform(houston, 3083)\n#bounding the joined data with houston coordinates\nacs_houston <- acs_join[houston_3083, ]\n\n#subsetting the blackout ares to houston area with the gdb layers\nhouston_subset <- acs_houston[homes_blackout, ]\n\n#the GEO and GEO_Data columns\nspatial_join <- st_join(homes_blackout, acs_join)\n\n#unique values in GEOID_Data\ncensus_n <- unique(spatial_join$GEOID_Data)\n\nprint(length(census_n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 754\n```\n:::\n:::\n\n\nCreating plots to compare incomes of impacted tracts to unimpacted tracts.\n\nThe first plot is a map of median income by census tract, designating which tracts had blackouts and the second an third plots will compare the distributions of income in impacted and unimpacted tracts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tmap)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'tmap'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:datasets':\n\n    rivers\n```\n:::\n\n```{.r .cell-code}\n#plotting the income and census track data first\n#polygons are colored based on median income\n#plotting the blackout homes on top of the houston area\ntm_shape(acs_join, bbox = st_bbox(hwys_further))+\n  tm_polygons(fill = \"B19013e1\", title = \"Median Income\")+\n  tm_shape(houston_subset)+\n  tm_borders(col = \"darkgreen\")+\n  tm_compass()+\n  tm_scalebar()+\n  tm_title(\"Median Income by Census Tract\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nDeprecated tmap v3 code detected. Code translated to v4\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(patchwork)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'patchwork'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:terra':\n\n    area\n```\n:::\n\n```{.r .cell-code}\n#selecting for matching values in the GEOID_Data column\nimpacted <- acs_houston %>% filter(GEOID_Data %in% houston_subset$GEOID_Data)\n#selecting for non-matching values in the GEOID_Data column\nunimpacted <- acs_houston %>% filter(!GEOID_Data %in% houston_subset$GEOID_Data)\n\n#check to make sure unique GEOID_Data values matches the impacted number of rows\nprint(length(unique(houston_subset$GEOID_Data)) == nrow(impacted))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n\n```{.r .cell-code}\n#plotting the impacted homes count\nimpacted_plot <- ggplot()+\n  geom_histogram(data = impacted, aes(x = B19013e1))+\n  xlab(\"Median Income\")+\n  ggtitle(\"Homes impacted by blackout\")\n\n#plotting the unimpacted homes count\nunimpacted_plot<- ggplot()+\n  geom_histogram(data = unimpacted, aes(x = B19013e1))+\n  xlab(\"Median Income\")+\n  ggtitle(\"Homes unimpacted by blackout\")\n\n#using patchwork to plot them together\nimpacted_plot+unimpacted_plot\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 4 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning: Removed 6 rows containing non-finite values (`stat_bin()`).\n```\n:::\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n**Discussion**\n\nThe histogram distributions look very similar on first glance. The y ranges are different but overall both plots are skewed to the right and unimodal. The map and the histograms do show that there is more of an impact from the storm for households with incomes less than \\$50,000 annually and a lower impact for blackouts for households. The limitations in the census tract data is that it is voluntary and therefore we do not know if it accurately represents the population as well as it could.\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}